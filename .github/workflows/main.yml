name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, pdo_mysql
        tools: composer, phpcs, phpcbf, phpmd

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run PHP_CodeSniffer
      run: |
        ./vendor/bin/phpcs --standard=PSR12 src/
        ./vendor/bin/phpcs --standard=PSR12 tests/

    - name: Run PHP Mess Detector
      run: ./vendor/bin/phpmd src/ text cleancode,codesize,controversial,design,naming,unusedcode

    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse src/ --level=5

  test:
    needs: code-quality
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bms_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, pdo_mysql
        coverage: xdebug

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Copy .env.example to .env
      run: cp .env.example .env

    - name: Run tests
      env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: bms_test
        DB_USERNAME: root
        DB_PASSWORD: root
      run: vendor/bin/phpunit

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, pdo_mysql

    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.DEPLOY_KEY }}

    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to production
      run: |
        rsync -avz --delete \
          --exclude '.git*' \
          --exclude 'tests' \
          --exclude 'phpunit.xml' \
          --exclude '.env.example' \
          --exclude 'README.md' \
          --exclude 'docs' \
          ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}

    - name: Post-deployment tasks
      run: |
        ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} '
          cd ${{ secrets.DEPLOY_PATH }} && \
          php artisan config:cache && \
          php artisan route:cache && \
          php artisan view:cache
        ' 